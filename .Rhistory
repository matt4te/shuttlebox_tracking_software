scale_fill_grey(start=.8, end=.4) +
xlab("Experimental Condition") + ylab("Normalized Turn Frequency") +
theme_bw() +
theme(axis.title.x = element_text(face="bold", size=10,vjust=-.5)) +
theme(axis.title.y = element_text(face="bold", size=10,vjust=1)) +
theme(axis.text.x = element_text(face="bold",size=9))
dev.off()
weighted <- ddply(data, ~fish, summarize,
N = length(ID),
normDiff = mean(normDiff),
meanCA = mean(controlAct),
meanTA = mean(treatAct),
meanCTF = mean(TcontrolTF45),
meanTTF = mean(TtreatTF45),
fish = fish)
ggplot(weighted,aes(x=normDiff)) + geom_density(size=1,fill="gray", colour="black") +
geom_vline(xintercept=0, color="black", size=1,alpha=0.5,linetype=2) +
geom_vline(xintercept=dataNormMean, color="black",size=1,alpha=.5) +
xlab("Normalized Count Difference") + ylab("Relative Probability") +
theme_bw() +
theme(axis.title.x = element_text(face="bold", size=10,vjust=-.1)) +
theme(axis.title.y = element_text(face="bold", size=10,vjust=1)) +
theme(axis.text.y=element_blank(),axis.ticks=element_blank()) +
theme(axis.text.x=element_text(face="bold",size=9)) +
xlim(-1,1)
tiff("FileName.tiff", height = 12, width = 17, units = 'cm', compression = "lzw", res = 300)
ggplot(weighted,aes(x=normDiff)) + geom_density(size=1,fill="gray", colour="black") +
geom_vline(xintercept=0, color="black", size=1,alpha=0.5,linetype=2) +
geom_vline(xintercept=dataNormMean, color="black",size=1,alpha=.5) +
xlab("Normalized Count Difference") + ylab("Relative Probability") +
theme_bw() +
theme(axis.title.x = element_text(face="bold", size=10,vjust=-.1)) +
theme(axis.title.y = element_text(face="bold", size=10,vjust=1)) +
theme(axis.text.y=element_blank(),axis.ticks=element_blank()) +
theme(axis.text.x=element_text(face="bold",size=9)) +
xlim(-1,1)
dev.off()
# create a data table for plot 1
meanCA <- mean(weighted$meanCA)
sd12 <- sd(weighted$meanCA)
se12 <- sd12/sqrt(length(weighted$meanCA))
meanTA <- mean(weighted$meanTA)
sd22 <- sd(weighted$meanTA)
se22 <- sd22/sqrt(length(weighted$meanTA))
barData2 <- c(meanCA, meanTA, sd12,sd22, se12,se22)
barTable2 <- as.data.frame(matrix(barData2,nrow=2,ncol=3))
colnames(barTable2) <- c("meanAct","sd","se")
barTable2$Condition <- c("Control","DMS")
# plot activity levels
ggplot(barTable2, aes(x= Condition, y= meanAct), colour="blue") + geom_bar(stat="identity",aes(fill=Condition)) +
geom_errorbar(aes(ymin=meanAct-se, ymax=meanAct+se)) +
xlab("Experimental Condition") + ylab("Activity Level (cm/s)") +
scale_fill_grey(start=.8, end=.4) +
theme_bw() +
theme(axis.title.x = element_text(face="bold", size=10,vjust=-.5)) +
theme(axis.title.y = element_text(face="bold", size=10,vjust=1)) +
theme(axis.text.x = element_text(face="bold",size=12))
tiff("FileName.tiff", height = 12, width = 17, units = 'cm', compression = "lzw", res = 300)
ggplot(barTable2, aes(x= Condition, y= meanAct), colour="blue") + geom_bar(stat="identity",aes(fill=Condition)) +
geom_errorbar(aes(ymin=meanAct-se, ymax=meanAct+se)) +
xlab("Experimental Condition") + ylab("Activity Level (cm/s)") +
scale_fill_grey(start=.8, end=.4) +
theme_bw() +
theme(axis.title.x = element_text(face="bold", size=10,vjust=-.5)) +
theme(axis.title.y = element_text(face="bold", size=10,vjust=1)) +
theme(axis.text.x = element_text(face="bold",size=12))
dev.off()
tiff("FileName.tiff", height = 12, width = 17, units = 'cm', compression = "lzw", res = 300)
TcontrolTFs <- mean(weighted$meanCTF)
TsdTFs <- sd(weighted$meanCTF)
TseTFs <- TsdTFs/sqrt(length(weighted$meanCTF))
TtreatTFs <- mean(weighted$meanTTF)
TsdTFs2 <- sd(weighted$meanTTF)
TseTFs2 <- TsdTFs2/sqrt(length(weighted$meanTTF))
TbarDataTFs <- c(TcontrolTFs, TtreatTFs, TsdTFs,TsdTFs2, TseTFs,TseTFs2)
TbarTableTFs <- as.data.frame(matrix(TbarDataTFs,nrow=2,ncol=3))
colnames(TbarTableTFs) <- c("meanTF","sd","se")
TbarTableTFs$Condition <- c("Control","DMS")
ggplot(TbarTableTFs, aes(x= Condition, y= meanTF), colour="blue") + geom_bar(stat="identity",aes(fill=Condition)) +
geom_errorbar(aes(ymin=meanTF-se, ymax=meanTF+se)) +
scale_fill_grey(start=.8, end=.4) +
xlab("Experimental Condition") + ylab("Normalized Turn Frequency") +
theme_bw() +
theme(axis.title.x = element_text(face="bold", size=10,vjust=-.5)) +
theme(axis.title.y = element_text(face="bold", size=10,vjust=1)) +
theme(axis.text.x = element_text(face="bold",size=9))
dev.off()
dir <- "C:/Users/Matt/Desktop/Current_Lab_Work/ShadowBox"
setwd(dir)
library("MASS")
library("plyr")
library("ggplot2")
library("reshape2")
## Load the data -----------------
# first data set
# stats <- grab_stats("experiments")# first, the preference statistics
stats <- read.csv("dms_stats.csv", stringsAsFactors=FALSE) # if you've saved the stats file already
log <- read.csv("Shuttle_Log.csv", stringsAsFactors=FALSE) # and the data log
colnames(log)[3] <- "expNum" # change the experiment id variable to keep consistent b/w data frames
data1 <- join(stats,log,by="expNum",type="inner")
data1$date <- as.POSIXct(data1$date,format="%m/%d/%Y")
# use only experiments where the fish crossed back and forth at least 3 times
data1 <- subset(data1, explorer == "TRUE" & status == "ok")
# newer data set
stats2 <- read.csv("dms_stats_2.csv", stringsAsFactors=FALSE)
log2 <- read.csv("Shuttle_Log2.csv", stringsAsFactors=FALSE)
colnames(log2)[3] <- "expNum"
data2 <- join(stats2,log2,by="expNum",type="inner")
data2 <- data2[-7,] # exclude based on notes
data2$date <- as.POSIXct(data2$date,format="%m/%d/%Y")
# newest data set
stats3 <- read.csv("dms_stats_3.csv", stringsAsFactors=FALSE)
log3 <- read.csv("Shuttle_Log3.csv", stringsAsFactors=FALSE)
colnames(log3)[3] <- "expNum"
data3 <- join(stats3,log3,by="expNum",type="inner")
data3$date <- as.POSIXct(data3$date,format="%m/%d/%Y")
# then combine the data
data <- rbind(data1,data2,data3)
data <- data[-2,] # exclude based on notes
# and normalized version
data$normDiff <- data$countDiff / (data$treatCount + data$controlCount)
dataNormMean <- mean(data$normDiff)
dataNormMed <- median(data$normDiff)
f1 <- fitdistr(data$normDiff,"normal")
mean1 <- as.numeric(f1$estimate[1])
sd1 <- as.numeric(f1$estimate[2])
n1 <- 28
norm1 <- rnorm(mean=mean1, sd=sd1, n=n1)
t1 <- t.test(norm1, mu=0, alternative = c("greater"))
t1$p.value
nsim=500
pval = numeric(nsim)
for (i in 1:nsim) {
normSim = rnorm(n=n1, mean=mean1, sd=sd1)
pval[i] = t.test(normSim, mu=0, alternative = c("greater"))$p.value
}
power = sum(pval < .01)/nsim
power
dataP <- subset(data, fish == "Stegastes partitus")
tP <- t.test(dataP$normDiff, mu=0, alternative = c("greater"))
tP$p.value
View(data)
dataD <- subset(data, fish == "Stegastes spp" | fish == "Stegastes diancaeus")
tD <- t.test(dataD$normDiff, mu=0, alternative = c("greater"))
tD$p.value
fP <- fitdistr(dataP$normDiff,"normal")
meanP <- as.numeric(fP$estimate[1])
sdP <- as.numeric(fP$estimate[2])
nP <- nrow(dataP)
Nvec = seq(5,50, by =5)
power.N = numeric(length(Nvec)) #
nsim=500
pval = numeric(nsim)
for (j in 1:length(Nvec)) {
N = Nvec[j]
for (i in 1:nsim) {
normSimP = rnorm(n=N, mean=meanP, sd=sdP)
pval[i] = t.test(normSimP, mu=0, alternative = c("greater"))$p.value
}
power.N[j] = sum(pval < 0.01)/nsim
}
power.N
mVec <- seq(.1,.4,by=.05)
power.Nm <- matrix(nrow=length(Nvec),ncol=length(mVec))
# implement nested loop
for (j in 1:length(Nvec)) {
Ns = Nvec[j]
for (k in 1:length(mVec)) {
meanS = mVec[k]
for (i in 1:nsim) {
normSimS <- rnorm(n=Ns, mean=meanS, sd=sdP)
pval[i] = t.test(normSimS, mu=0, alternative = c("greater"))$p.value
}
power.Nm[j,k] = sum(pval < 0.01)/nsim
}
}
rownames(power.Nm) <- Nvec
colnames(power.Nm) <- mVec
power.Nm
meltP <- melt(power.Nm)
names(meltP) <- c("x", "y", "z")
Pp <- ggplot(meltP, aes(x, y, z=z))  +
theme_classic()+theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
geom_tile(aes(fill = z)) + stat_contour(bins=5, size=1) +
theme(plot.title = element_text(lineheight=.8, face="bold")) +
xlab("Sample Size (N)") + ylab("Mean Count Difference") +
geom_segment(aes(x=3,xend=9,y=.206,yend=.206, color="red")) +
geom_segment(aes(x=9,xend=9,y=0.075,yend=0.206, color="red")) +
scale_colour_discrete(name = "S. partitus", labels=c("Real Data")) +
guides(fill=guide_legend(title="Statistical Power"))
Pp
meanP
Pp <- ggplot(meltP, aes(x, y, z=z))  +
theme_classic()+theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
geom_tile(aes(fill = z)) + stat_contour(bins=5, size=1) +
theme(plot.title = element_text(lineheight=.8, face="bold")) +
xlab("Sample Size (N)") + ylab("Mean Count Difference") +
geom_segment(aes(x=3,xend=nrow(dataP),y=meanP,yend=meanP, color="red")) +
geom_segment(aes(x=nrow(dataP),xend=nrow(dataP),y=0.075,yend=meanP, color="red")) +
scale_colour_discrete(name = "S. partitus", labels=c("Real Data")) +
guides(fill=guide_legend(title="Statistical Power"))
Pp
Pp <- ggplot(meltP, aes(x, y, z=z))  +
theme_classic()+theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
geom_tile(aes(fill = z)) + stat_contour(bins=5, size=1, color="blacK") +
theme(plot.title = element_text(lineheight=.8, face="bold")) +
xlab("Sample Size (N)") + ylab("Mean Count Difference") +
geom_segment(aes(x=3,xend=nrow(dataP),y=meanP,yend=meanP, color="red")) +
geom_segment(aes(x=nrow(dataP),xend=nrow(dataP),y=0.075,yend=meanP, color="red")) +
scale_colour_discrete(name = "S. partitus", labels=c("Real Data")) +
guides(fill=guide_legend(title="Statistical Power"))
Pp
meanP
sd{}
sdP
# implement nested loop
for (j in 1:length(Nvec)) {
Ns = Nvec[j]
for (k in 1:length(mVec)) {
meanS = mVec[k]
for (i in 1:nsim) {
normSimS <- rnorm(n=Ns, mean=meanS, sd=sdP)
pval[i] = t.test(normSimS, mu=0, alternative = c("greater"))$p.value
}
power.Nm[j,k] = sum(pval < 0.05)/nsim
}
}
rownames(power.Nm) <- Nvec
colnames(power.Nm) <- mVec
power.Nm
Pp <- ggplot(meltP, aes(x, y, z=z))  +
theme_classic()+theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
geom_tile(aes(fill = z)) + stat_contour(bins=5, size=1, color="blacK") +
theme(plot.title = element_text(lineheight=.8, face="bold")) +
xlab("Sample Size (N)") + ylab("Mean Count Difference") +
geom_segment(aes(x=3,xend=nrow(dataP),y=meanP,yend=meanP, color="red")) +
geom_segment(aes(x=nrow(dataP),xend=nrow(dataP),y=0.075,yend=meanP, color="red")) +
scale_colour_discrete(name = "S. partitus", labels=c("Real Data")) +
guides(fill=guide_legend(title="Statistical Power"))
Pp
meltP <- melt(power.Nm)
names(meltP) <- c("x", "y", "z")
Pp <- ggplot(meltP, aes(x, y, z=z))  +
theme_classic()+theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
geom_tile(aes(fill = z)) + stat_contour(bins=5, size=1, color="blacK") +
theme(plot.title = element_text(lineheight=.8, face="bold")) +
xlab("Sample Size (N)") + ylab("Mean Count Difference") +
geom_segment(aes(x=3,xend=nrow(dataP),y=meanP,yend=meanP, color="red")) +
geom_segment(aes(x=nrow(dataP),xend=nrow(dataP),y=0.075,yend=meanP, color="red")) +
scale_colour_discrete(name = "S. partitus", labels=c("Real Data")) +
guides(fill=guide_legend(title="Statistical Power"))
Pp
power.Nm
meltP <- melt(power.Nm)
meltP
setwd("C:/Users/Matt/Desktop/new_dms_revisions/figures")
tiff("FileName.tiff", height = 12, width = 17, units = 'cm', compression = "lzw", res = 300)
Pp
dev.off()
dataSt <- subset(data, fish == "Stegastes partitus" | fish == "Stegastes spp" | fish == "Stegastes diancaeus" | fish == "Stegastes variabilis")
# first, extract distribution paramters
fSt <- fitdistr(dataSt$normDiff,"normal")
meanSt <- as.numeric(fSt$estimate[1])
sdSt <- as.numeric(fSt$estimate[2])
nSt <- nrow(dataSt)
Nvec = seq(5,50, by =5)
power.N = numeric(length(Nvec))
nsim=500
pval = numeric(nsim)
mVec <- seq(.1,.4,by=.05)
power.NmSt <- matrix(nrow=length(Nvec),ncol=length(mVec))
# implement nested loop
for (j in 1:length(Nvec)) {
Nst = Nvec[j]
for (k in 1:length(mVec)) {
meanSt = mVec[k]
for (i in 1:nsim) {
normSimSt <- rnorm(n=Nst, mean=meanSt, sd=sdSt)
pval[i] = t.test(normSimSt, mu=0, alternative = c("greater"))$p.value
}
power.NmSt[j,k] = sum(pval < 0.01)/nsim
}
}
rownames(power.NmSt) <- Nvec
colnames(power.NmSt) <- mVec
power.NmSt
# plot the power contour
meltSt <- melt(power.NmSt)
names(meltSt) <- c("x", "y", "z")
PSt <- ggplot(meltSt, aes(x, y, z=z))  +
theme_classic()+theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
geom_tile(aes(fill = z)) + stat_contour(bins=5, size=1) +
theme(plot.title = element_text(lineheight=.8, face="bold")) +
xlab("Sample Size (N)") + ylab("Mean Count Difference") +
geom_segment(aes(x=3,xend=nrow(dataSt),y=meanSt,yend=meanSt, color="red")) +
geom_segment(aes(x=nrow(dataSt),xend=nrow(dataSt),y=0.075,yend=meanSt, color="red")) +
scale_colour_discrete(name = "Stegastes spp", labels=c("Real Data")) +
guides(fill=guide_legend(title="Statistical Power"))
PSt
PSt <- ggplot(meltSt, aes(x, y, z=z))  +
theme_classic()+theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
geom_tile(aes(fill = z)) + stat_contour(bins=5, size=1,color="black") +
theme(plot.title = element_text(lineheight=.8, face="bold")) +
xlab("Sample Size (N)") + ylab("Mean Count Difference") +
geom_segment(aes(x=3,xend=nrow(dataSt),y=meanSt,yend=meanSt, color="red")) +
geom_segment(aes(x=nrow(dataSt),xend=nrow(dataSt),y=0.075,yend=meanSt, color="red")) +
scale_colour_discrete(name = "Stegastes spp", labels=c("Real Data")) +
guides(fill=guide_legend(title="Statistical Power"))
PSt
meanSt
mVec <- seq(.3,.5,by=.05)
power.NmSt <- matrix(nrow=length(Nvec),ncol=length(mVec))
# implement nested loop
for (j in 1:length(Nvec)) {
Nst = Nvec[j]
for (k in 1:length(mVec)) {
meanSt = mVec[k]
for (i in 1:nsim) {
normSimSt <- rnorm(n=Nst, mean=meanSt, sd=sdSt)
pval[i] = t.test(normSimSt, mu=0, alternative = c("greater"))$p.value
}
power.NmSt[j,k] = sum(pval < 0.01)/nsim
}
}
rownames(power.NmSt) <- Nvec
colnames(power.NmSt) <- mVec
power.NmSt
# plot the power contour
meltSt <- melt(power.NmSt)
names(meltSt) <- c("x", "y", "z")
PSt <- ggplot(meltSt, aes(x, y, z=z))  +
theme_classic()+theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
geom_tile(aes(fill = z)) + stat_contour(bins=5, size=1,color="black") +
theme(plot.title = element_text(lineheight=.8, face="bold")) +
xlab("Sample Size (N)") + ylab("Mean Count Difference") +
geom_segment(aes(x=3,xend=nrow(dataSt),y=meanSt,yend=meanSt, color="red")) +
geom_segment(aes(x=nrow(dataSt),xend=nrow(dataSt),y=0.075,yend=meanSt, color="red")) +
scale_colour_discrete(name = "Stegastes spp", labels=c("Real Data")) +
guides(fill=guide_legend(title="Statistical Power"))
PSt
meanSt
meanSt <- as.numeric(fSt$estimate[1])
meanSt
meanSt
mVec <- seq(.1,.4,by=.05)
power.NmSt <- matrix(nrow=length(Nvec),ncol=length(mVec))
# implement nested loop
for (j in 1:length(Nvec)) {
Nst = Nvec[j]
for (k in 1:length(mVec)) {
meanS = mVec[k]
for (i in 1:nsim) {
normSimSt <- rnorm(n=Nst, mean=meanSt, sd=sdSt)
pval[i] = t.test(normSimSt, mu=0, alternative = c("greater"))$p.value
}
power.NmSt[j,k] = sum(pval < 0.01)/nsim
}
}
rownames(power.NmSt) <- Nvec
colnames(power.NmSt) <- mVec
power.NmSt
# plot the power contour
meltSt <- melt(power.NmSt)
names(meltSt) <- c("x", "y", "z")
PSt <- ggplot(meltSt, aes(x, y, z=z))  +
theme_classic()+theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
geom_tile(aes(fill = z)) + stat_contour(bins=5, size=1,color="black") +
theme(plot.title = element_text(lineheight=.8, face="bold")) +
xlab("Sample Size (N)") + ylab("Mean Count Difference") +
geom_segment(aes(x=3,xend=nrow(dataSt),y=meanSt,yend=meanSt, color="red")) +
geom_segment(aes(x=nrow(dataSt),xend=nrow(dataSt),y=0.075,yend=meanSt, color="red")) +
scale_colour_discrete(name = "Stegastes spp", labels=c("Real Data")) +
guides(fill=guide_legend(title="Statistical Power"))
PSt
# implement nested loop
for (j in 1:length(Nvec)) {
Nst = Nvec[j]
for (k in 1:length(mVec)) {
meanS = mVec[k]
for (i in 1:nsim) {
normSimSt <- rnorm(n=Nst, mean=meanS, sd=sdSt)
pval[i] = t.test(normSimSt, mu=0, alternative = c("greater"))$p.value
}
power.NmSt[j,k] = sum(pval < 0.01)/nsim
}
}
rownames(power.NmSt) <- Nvec
colnames(power.NmSt) <- mVec
power.NmSt
# plot the power contour
meltSt <- melt(power.NmSt)
names(meltSt) <- c("x", "y", "z")
PSt <- ggplot(meltSt, aes(x, y, z=z))  +
theme_classic()+theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
geom_tile(aes(fill = z)) + stat_contour(bins=5, size=1,color="black") +
theme(plot.title = element_text(lineheight=.8, face="bold")) +
xlab("Sample Size (N)") + ylab("Mean Count Difference") +
geom_segment(aes(x=3,xend=nrow(dataSt),y=meanSt,yend=meanSt, color="red")) +
geom_segment(aes(x=nrow(dataSt),xend=nrow(dataSt),y=0.075,yend=meanSt, color="red")) +
scale_colour_discrete(name = "Stegastes spp", labels=c("Real Data")) +
guides(fill=guide_legend(title="Statistical Power"))
PSt
getwd()
tiff("FileName.tiff", height = 12, width = 17, units = 'cm', compression = "lzw", res = 300)
PSt
dev.off()
meanSt
sdSt
# implement nested loop
for (j in 1:length(Nvec)) {
Nst = Nvec[j]
for (k in 1:length(mVec)) {
meanS = mVec[k]
for (i in 1:nsim) {
normSimSt <- rnorm(n=Nst, mean=meanS, sd=sdSt)
pval[i] = t.test(normSimSt, mu=0, alternative = c("greater"))$p.value
}
power.NmSt[j,k] = sum(pval < 0.05)/nsim
}
}
rownames(power.NmSt) <- Nvec
colnames(power.NmSt) <- mVec
power.NmSt
# plot the power contour
meltSt <- melt(power.NmSt)
names(meltSt) <- c("x", "y", "z")
PSt <- ggplot(meltSt, aes(x, y, z=z))  +
theme_classic()+theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
geom_tile(aes(fill = z)) + stat_contour(bins=5, size=1,color="black") +
theme(plot.title = element_text(lineheight=.8, face="bold")) +
xlab("Sample Size (N)") + ylab("Mean Count Difference") +
geom_segment(aes(x=3,xend=nrow(dataSt),y=meanSt,yend=meanSt, color="red")) +
geom_segment(aes(x=nrow(dataSt),xend=nrow(dataSt),y=0.075,yend=meanSt, color="red")) +
scale_colour_discrete(name = "Stegastes spp", labels=c("Real Data")) +
guides(fill=guide_legend(title="Statistical Power"))
PSt
tSt <- t.test(dataSt$normDiff, mu=0, alternative = c("greater"))
tSt$p.value
tiff("FileName.tiff", height = 12, width = 17, units = 'cm', compression = "lzw", res = 300)
PSt
dev.off()
dataA <- subset(data, fish != "Stegastes partitus" & fish != "Stegastes spp" & fish != "Stegastes diancaeus")
View(dataA)
dataA <- subset(data, fish != "Stegastes partitus" & fish != "Stegastes spp" & fish != "Stegastes diancaeus" & fish != "Stegastes variabilis")
fA <- fitdistr(dataA$normDiff,"normal")
meanA <- as.numeric(fA$estimate[1])
sdA <- as.numeric(fA$estimate[2])
nA <- nrow(dataA)
# simulate data with these parameters
normA <- rnorm(mean=meanA, sd=sdA, n=nA)
# can we determine significance?
tA <- t.test(normA, mu=0, alternative = c("greater"))
tA$p.value
Nvec = seq(5,50, by =5)
power.Na = numeric(length(Nvec))
nsim=500
pval = numeric(nsim)
nsim=500
pval = numeric(nsim)
mVec <- seq(.2,.5,by=.05)
power.Nma <- matrix(nrow=length(Nvec),ncol=length(mVec))
# implement nested loop
for (j in 1:length(Nvec)) {
Nsa = Nvec[j]
for (k in 1:length(mVec)) {
meanSa = mVec[k]
for (i in 1:nsim) {
normSimSa <- rnorm(n=Nsa, mean=meanSa, sd=sdA)
pval[i] = t.test(normSimSa, mu=0, alternative = c("greater"))$p.value
}
power.Nma[j,k] = sum(pval < 0.05)/nsim
}
}
rownames(power.Nma) <- Nvec
colnames(power.Nma) <- mVec
power.Nma
# plot the power contour
melta <- melt(power.Nma)
names(melta) <- c("x", "y", "z")
meanA
tA <- t.test(dataA$normDiff, mu=0, alternative = c("greater"))
tA$p.value
tP <- t.test(dataP$normDiff, mu=0, alternative = c("greater"))
tP$p.value
Pa <- ggplot(melta, aes(x, y, z=z))  +
theme_classic()+theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
geom_tile(aes(fill = z)) + stat_contour(bins=5, size=1) +
theme(plot.title = element_text(lineheight=.8, face="bold")) +
xlab("Sample Size (N)") + ylab("Mean Count Difference") +
guides(fill=guide_legend(title="Statistical Power")) +
geom_segment(aes(x=3,xend=nrow(dataA),y=meanA,yend=meanA, color="red")) +
geom_segment(aes(x=nrow(dataA),xend=nrow(dataA),y=0.175,yend=meanA, color="red")) +
scale_colour_discrete(name = "All other taxa", labels=c("Real Data"))
Pa
Pa <- ggplot(melta, aes(x, y, z=z))  +
theme_classic()+theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank()) +
geom_tile(aes(fill = z)) + stat_contour(bins=5, size=1,color="black") +
theme(plot.title = element_text(lineheight=.8, face="bold")) +
xlab("Sample Size (N)") + ylab("Mean Count Difference") +
guides(fill=guide_legend(title="Statistical Power")) +
geom_segment(aes(x=3,xend=nrow(dataA),y=meanA,yend=meanA, color="red")) +
geom_segment(aes(x=nrow(dataA),xend=nrow(dataA),y=0.175,yend=meanA, color="red")) +
scale_colour_discrete(name = "All other taxa", labels=c("Real Data"))
Pa
tiff("FileName.tiff", height = 12, width = 17, units = 'cm', compression = "lzw", res = 300)
Pa
dev.off()
sdA
t.test(weighted$normDiff, mu=0, alternative = c("greater"))
wilcox.test(x=weighted$meanTA,y=weighted$meanCA,paired=TRUE)
t.test(x=weighted$meanTA,y=weighted$meanCA,paired=TRUE)
t.test(x=weighted$meanTTF,y=weighted$meanCTF,paired=TRUE)
